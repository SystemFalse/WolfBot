/*
 * Copyright (c) 2025 SystemFalse
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

package io.github.systemfalse.wolfbot.bot.handlers;

import io.github.systemfalse.wolfbot.bot.TelegramBot;
import io.github.systemfalse.wolfbot.model.User;
import io.github.systemfalse.wolfbot.service.ScheduleService;
import io.github.systemfalse.wolfbot.service.UserService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.Message;

@Component
@RequiredArgsConstructor
@Slf4j
public class MessageHandler {

    private TelegramBot telegramBot;
    private final UserService userService;
    private final ScheduleService scheduleService;

    public void initBot(TelegramBot telegramBot) {
        this.telegramBot = telegramBot;
    }

    public void handleTextMessage(Message message) {
        String text = message.getText();
        Long userId = message.getFrom().getId();
        Long chatId = message.getChatId();

        log.info("–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", userId, text);

        // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –æ–Ω –Ω–æ–≤—ã–π
        User user = userService.findOrCreateUser(message.getFrom());

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
        switch (text) {
            case "/start":
                handleStartCommand(chatId, user);
                break;
            case "/help":
                handleHelpCommand(chatId);
                break;
            case "/subscribe":
                handleSubscribeCommand(chatId, user);
                break;
            case "/unsubscribe":
                handleUnsubscribeCommand(chatId, user);
                break;
            case "/schedule":
                handleScheduleCommand(chatId, user);
                break;
            case "/upload":
                handleUploadCommand(chatId);
                break;
            case "/status":
                handleStatusCommand(chatId, user);
                break;
            default:
                handleUnknownCommand(chatId, text);
        }
    }

    private void handleStartCommand(Long chatId, User user) {
        String welcomeText = String.format(
                "üê∫ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Wolf Bot!</b>\n\n" +
                        "–ü—Ä–∏–≤–µ—Ç, %s! –Ø –±–æ—Ç –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –≤–æ–ª–∫–æ–≤.\n\n" +
                        "üîß <b>–ú–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n" +
                        "‚Ä¢ –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –≤–æ–ª–∫–æ–≤ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é\n" +
                        "‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n" +
                        "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è\n\n" +
                        "üìù –ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥",
                user.getDisplayName()
        );
        telegramBot.sendTextMessage(chatId, welcomeText);
    }

    private void handleHelpCommand(Long chatId) {
        String helpText =
                "ü§ñ <b>–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:</b>\n\n" +
                        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n" +
                        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n" +
                        "/subscribe - –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É\n" +
                        "/unsubscribe - –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏\n" +
                        "/schedule - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ\n" +
                        "/upload - –ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –≤–æ–ª–∫–∞\n" +
                        "/status - –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–π —Å—Ç–∞—Ç—É—Å\n\n" +
                        "üì∏ –ß—Ç–æ–±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ –≤ —á–∞—Ç!\n\n" +
                        "‚ùì –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –æ–±—Ä–∞—Ç–∏—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.";
        telegramBot.sendTextMessage(chatId, helpText);
    }

    private void handleSubscribeCommand(Long chatId, User user) {
        if (user.isSubscribed()) {
            telegramBot.sendTextMessage(chatId,
                    "‚úÖ –í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É –∫–∞—Ä—Ç–∏–Ω–æ–∫ –≤–æ–ª–∫–æ–≤!");
        } else {
            userService.updateSubscription(user.getTelegramId(), true);
            telegramBot.sendTextMessage(chatId,
                    "üéâ <b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</b>\n\n" +
                            "–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É –∫–∞—Ä—Ç–∏–Ω–æ–∫ –≤–æ–ª–∫–æ–≤!\n" +
                            "–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∫–∞—Ä—Ç–∏–Ω–∫–∏ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 12:00.\n\n" +
                            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /schedule –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.");
        }
    }

    private void handleUnsubscribeCommand(Long chatId, User user) {
        if (!user.isSubscribed()) {
            telegramBot.sendTextMessage(chatId,
                    "‚ÑπÔ∏è –í—ã —É–∂–µ –æ—Ç–ø–∏—Å–∞–Ω—ã –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏.");
        } else {
            userService.updateSubscription(user.getTelegramId(), false);
            telegramBot.sendTextMessage(chatId,
                    "üò¢ –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –≤–æ–ª–∫–æ–≤.\n\n" +
                            "–ß—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /subscribe");
        }
    }

    private void handleScheduleCommand(Long chatId, User user) {
        String scheduleText =
                "‚è∞ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è</b>\n\n" +
                        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:\n" +
                        "‚Ä¢ –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 9:00 - /set_daily_9\n" +
                        "‚Ä¢ –ö–∞–∂–¥—ã–π day –≤ 12:00 - /set_daily_12\n" +
                        "‚Ä¢ –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 18:00 - /set_daily_18\n" +
                        "‚Ä¢ –¢–æ–ª—å–∫–æ –ø–æ —Ä–∞–±–æ—á–∏–º –¥–Ω—è–º –≤ 12:00 - /set_workdays\n" +
                        "‚Ä¢ –¢–æ–ª—å–∫–æ –ø–æ –≤—ã—Ö–æ–¥–Ω—ã–º –≤ 10:00 - /set_weekends\n\n" +
                        "üîß –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–≤–æ–µ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.";
        telegramBot.sendTextMessage(chatId, scheduleText);
    }

    private void handleUploadCommand(Long chatId) {
        telegramBot.sendTextMessage(chatId,
                "üì∏ <b>–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</b>\n\n" +
                        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤–æ–ª–∫–∞ –≤ —á–∞—Ç, –∏ –æ–Ω–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é.\n\n" +
                        "‚ö†Ô∏è <b>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</b>\n" +
                        "‚Ä¢ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –±–æ–ª–µ–µ 10 –ú–ë\n" +
                        "‚Ä¢ –¢–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–æ–ª–∫–æ–≤\n" +
                        "‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n\n" +
                        "–ü–æ—Å–ª–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –≤–∞—à–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ–±—â—É—é –±–∞–∑—É.");
    }

    private void handleStatusCommand(Long chatId, User user) {
        String status = user.isSubscribed() ? "‚úÖ –ü–æ–¥–ø–∏—Å–∞–Ω" : "‚ùå –ù–µ –ø–æ–¥–ø–∏—Å–∞–Ω";
        long uploadedCount = userService.getUserUploadedImagesCount(user.getTelegramId());

        String statusText = String.format(
                "üë§ <b>–í–∞—à —Å—Ç–∞—Ç—É—Å</b>\n\n" +
                        "–ò–º—è: %s\n" +
                        "–ü–æ–¥–ø–∏—Å–∫–∞: %s\n" +
                        "–ó–∞–≥—Ä—É–∂–µ–Ω–æ –∫–∞—Ä—Ç–∏–Ω–æ–∫: %d\n" +
                        "–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: %s",
                user.getDisplayName(),
                status,
                uploadedCount,
                user.getRegisteredAt().toLocalDate()
        );
        telegramBot.sendTextMessage(chatId, statusText);
    }

    private void handleUnknownCommand(Long chatId, String text) {
        telegramBot.sendTextMessage(chatId,
                "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: " + text + "\n\n" +
                        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.");
    }
}
